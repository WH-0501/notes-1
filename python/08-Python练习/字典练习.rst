字典练习
========

要求key通过字典序升序排列(注意key可能是字符串）。
-------------------------------------------------

给你一字典a，如a =
{1:“a”,2:“b”,3:“c”}，输出字典a的key，以’,‘连接，如‘1,2,3’。要求key通过字典序升序排列(注意key可能是字符串）。

例如：a = {1:“a”,2:“b”,3:“c”}, 则输出：1,2,3

.. code:: python

    # Python join() 方法用于将序列中的元素以指定的字符连接生成一个新的字符串。
    # str.join(sequence)
    # 参数：sequence -- 要连接的元素序列
    # 返回值：返回通过指定字符连接序列中元素后生成的新字符串。
    # 实例：以下实例展示了join()的使用方法：
    >>> print(','.join([str(key) for key in a.keys()]))
    1,2,3

    # map()是 Python 内置的高阶函数，它接收一个函数 f 和一个 list，并通过把函数 f 依次作用在 list 的每个元素上，得到一个新的 list 并返回。
    # 不改变原有list,返回一个新list
    >>> print(','.join(map(str,a.keys())))
    1,2,3

.. code:: python

    a = {1:"a",2:"b",3:"c"}

    #Python 3 ,a.keys返回的是一个可迭代的视图对象,称之为 dict_keys,不能使用join
    #>>> a.keys()
    #dict_keys([1, 2, 3])

    b=a.keys()
    m=[]
    for i in b:
        m.append(str(i))

    print(','.join(m))

字符串逆序输出
--------------

a = “12345”

::

    >>> a[::-1]
    '54321'

.. code:: python

    >>> a = "12345"

    >>> l = list(a)
    >>> l
    ['1', '2', '3', '4', '5']

    >>> l.reverse()
    >>> l
    ['5', '4', '3', '2', '1']
    >>> ''.join(l)
    '54321'
