方法
====

方法的定义
----------

一般情况下, 定义一个方法包含以下语法

.. code:: java

    修饰符 返回值类型 方法名(参数类型 参数名){
        ...
        方法体
        ...
        return 返回值;
    }

方法包含一个方法头和一个方法体。下面是一个方法的所有部分

-  修饰符：修饰符, 这是可选的,
   告诉编译器如何调用该方法。定义了该方法的访问类型。
-  返回值类型 ：方法可能会返回值。returnValueType
   是方法返回值的数据类型。有些方法执行所需的操作,
   但没有返回值。在这种情况下, returnValueType 是关键字void。
-  方法名：是方法的实际名称。方法名和参数表共同构成方法签名。
-  参数类型：参数像是一个占位符。当方法被调用时,
   传递值给参数。这个值被称为实参或变量。参数列表是指方法的参数类型、顺序和参数的个数。参数是可选的,
   方法可以不包含任何参数。
-  方法体：方法体包含具体的语句, 定义该方法的功能。

方法调用
--------

Java 支持两种调用方法的方式, 根据方法是否返回值来选择。

当程序调用一个方法时,
程序的控制权交给了被调用的方法。当被调用方法的返回语句执行或者到达方法体闭括号时候交还控制权给程序。

当方法返回一个值的时候, 方法调用通常被当做一个值。例如：

::

    int larger = max(30, 40);

如果方法返回值是void, 方法调用一定是一条语句。例如,
方法println返回void。下面的调用是个语句：

::

    System.out.println("Hello World");
